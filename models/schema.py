# from gluon.tools import Mail
# from gluon.tools import Recaptcha2
# mail = Mail()
# mail.settings.server = 'smtp.office365.com:587' or 'logging'
# mail.settings.sender = 'merch-noreply@merch.com.qa'
# mail.settings.login = 'merch-noreply@merch.com.qa:123P@ssw0rd45' # 45Password123
# mail.settings.tls = 'smtp.tls'
#   gmail = merch.noreply@gmail.com/45Password123 ()=> 45P@ssW0rd123 => FwdMn39TJzRA

# from gluon.tools import Mail
# mail = Mail()
# mail.settings.server = 'smtp.gmail.com:587'
# mail.settings.sender = 'merch.noreply@gmail.com'
# mail.settings.login = 'merch.noreply@gmail.com:45Password123' # 45Password123
# mail.settings.tls = 'smtp.tls'
 
db.define_table('Status', 
    Field('status','string',length=20, requires = [IS_UPPER(), IS_NOT_IN_DB(db, 'Status.status')]),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False),format = '%(status)s')

db.define_table('Employee_Status', 
    Field('status','string',length=50, requires = IS_NOT_IN_DB(db, 'Status.status')),    
    Field('description','string'),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False),format = '%(status)s')

db.define_table('Overtime_Status', 
    Field('status','string',length=50, requires = IS_NOT_IN_DB(db, 'Status.status')),    
    Field('description','string'),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False),format = '%(status)s')

db.define_table('Leave_Status', 
    Field('status','string',length=50),# requires = IS_NOT_IN_DB(db, 'Leave_Status.status')),    
    Field('action_required',length=50),
    Field('description','string', length = 50),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False),format = '%(status)s')

db.define_table('Type_Leave', 
    Field('type_of_leave', 'string',length=50), #requires = IS_NOT_IN_DB(db, 'Type_Leave.type_of_leave')),    
    Field('description','string', length = 50),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),    
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False),format = '%(type_of_leave)s')

db.define_table('Department',    
    Field('department_code','string', length = 5, label ='Department Code', requires = IS_NOT_IN_DB(db, 'Department.department_code')),
    Field('department_name','string', length = 50, label = 'Department Name', requires = [IS_UPPER(), IS_NOT_IN_DB(db, 'Department.department_name')]),
    Field('status_id','reference Status', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Status.id,'%(status)s', zero = 'Choose status')),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False),format = '%(department_code)s')

db.define_table('Sub_Department',    
    Field('department_code_id','reference Department', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Department.id, '%(department_code)s - %(department_name)s', zero = 'Choose Department')),
    Field('sub_department_name','string', length = 50, label = 'Sub Department Name', requires = [IS_UPPER(), IS_NOT_IN_DB(db, 'Sub_Department.sub_department_name')]),
    Field('status_id','reference Status', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Status.id,'%(status)s', zero = 'Choose status')),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False),format = '%(sub_department_name)s')

db.define_table('Designation',    
    Field('designation_code','string', length = 5, label ='Designation Code', requires = IS_NOT_IN_DB(db, 'Designation.designation_code')),
    Field('designation_name','string', length = 50, label = 'Designation Name', requires = [IS_UPPER(), IS_NOT_IN_DB(db, 'Designation.designation_name')]),
    Field('status_id','reference Status', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Status.id,'%(status)s', zero = 'Choose status')),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False),format = '%(designation_code)s')

db.define_table('Section',    
    Field('section_code','string', length = 5, label ='Section Code', requires = IS_NOT_IN_DB(db, 'Section.section_code')),
    Field('section_name','string', length = 50, label = 'Section Name', requires = [IS_UPPER(), IS_NOT_IN_DB(db, 'Section.section_name')]),
    Field('status_id','reference Status', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Status.id,'%(status)s', zero = 'Choose status')),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False),format = '%(section_code)s')

db.define_table('Employee_Master',
    Field('title','string',length = 25, requires = IS_IN_SET(['Mr.','Ms.','Mrs.','Mme'], zero = 'Title')),
    Field('first_name','string',length = 50, requires = [IS_UPPER(), IS_NOT_EMPTY()]),
    Field('middle_name','string',length = 50),
    Field('last_name','string',length = 50, requires = [IS_UPPER(), IS_NOT_EMPTY()]),
    Field('gender', 'string', length = 25, requires = IS_IN_SET(['Male','Female'], zero = 'Choose Gender')),
    Field('telephone_no','string', length = 25),
    Field('mobile_no', 'string', length = 25),
    Field('email','string', length = 50),
    Field('marital_status','string', length = 25, requires = IS_EMPTY_OR(IS_IN_SET(['SINGLE','MARRIED'], zero = 'Choose Marital Status'))),
    Field('nationality', 'string', length = 50, requires = IS_EMPTY_OR(IS_IN_SET(NATIONALITIES_list, zero = 'Choose Nationality'))),
    Field('religion', 'string', length = 100, requires = IS_EMPTY_OR(IS_IN_SET(RELIGIONS_LIST, zero = 'Choose Religions'))),
    Field('languages','list:string', length = 50, requires = IS_EMPTY_OR(IS_IN_SET(LANGUAGES_list, zero = 'Choose Languages', multiple = True))),
    Field('birth_place', 'string',length = 50, requires = IS_UPPER()),
    Field('birth_date', 'date'),
    Field('fathers_name', 'string', length = 50),
    Field('education_qualification', 'string'),    
    Field('passport_no','string', length = 50),
    Field('passport_image', 'upload',label='Passport Image (pdf file)',requires=IS_EMPTY_OR(IS_UPLOAD_FILENAME(extension='pdf'))),
    Field('passport_date_issued', 'date'),     
    Field('passport_date_expiration', 'date'), 
    Field('date_given','date'), #passport
    Field('issuing_government', length = 50, requires = IS_EMPTY_OR(IS_IN_SET(COUNTRIES, zero = 'Choose Country'))),    
    Field('place_issued', 'string', length = 50),
    Field('professional_passport', 'string', length = 50),
    Field('residence_permit_no', 'string', length = 50),
    Field('residence_permit_no_image', 'upload',label='Residence Permit Image (pdf file)',requires=IS_EMPTY_OR(IS_UPLOAD_FILENAME(extension='pdf'))),
    Field('residence_permit_no_expiration_date', 'date'),
    Field('labor_card_no', 'string', length = 50),
    Field('labor_card_no_image','upload',label='Labor Card Image (pdf file)',requires=IS_EMPTY_OR(IS_UPLOAD_FILENAME(extension='pdf'))),
    Field('labor_card_no_expiration_date','date'),
    Field('health_card_no', 'string',length = 50),
    Field('health_card_no_image','upload',label='Health Card Image (pdf file)',requires=IS_EMPTY_OR(IS_UPLOAD_FILENAME(extension='pdf'))),
    Field('health_card_no_expiration_date', 'date'),
    Field('medical_health_card_cert_no', 'string',length = 50),
    Field('medical_health_card_cert_no_image','upload',label='Medical Health Card Certificate Image (pdf file)',requires=IS_EMPTY_OR(IS_UPLOAD_FILENAME(extension='pdf'))),
    Field('medical_health_card_cert_no_expiration_date', 'date'),
    Field('driver_license_no','string',length=50),
    Field('driver_license_no_image','upload',label='Driver License No Image (pdf file)',requires=IS_EMPTY_OR(IS_UPLOAD_FILENAME(extension='pdf'))),
    Field('driver_license_no_expiration_date','date'),
    Field('last_job', 'string', length = 50),
    Field('reason_leaving_previous_job','string', length = 50),
    Field('previous_salary','decimal(10,2)', default = 0),
    Field('emergency_contant_name', 'string', length = 50),
    Field('emergency_contact_no', 'string', length = 50),
    Field('emergency_relationship', 'string', length = 50),
    Field('next_of_ken','string', length = 50),
    Field('residence_no', 'string', length = 50),
    Field('residence_no_date', 'date'),
    Field('residence_no_date_expiration', 'date'),
    Field('photo', 'upload',label='Photo Image (jpg,png)',requires=IS_EMPTY_OR(IS_IMAGE(extensions=('jpeg', 'png')))),
    Field('resume_image','upload',label='Resume (pdf file)',requires=IS_EMPTY_OR(IS_UPLOAD_FILENAME(extension='pdf'))),
    Field('educational_certificate','upload',label = 'Educational Certificate (pdf file)',requires=IS_EMPTY_OR(IS_UPLOAD_FILENAME(extension='pdf'))),
    Field('employment_contract','upload',label='Employment Contract (pdf file)',requires=IS_EMPTY_OR(IS_UPLOAD_FILENAME(extension='pdf'))),
    Field('employee_status_id','reference Employee_Status', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Employee_Status.id,'%(status)s', zero = 'Choose status')),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False), format = '%(first_name)s %(last_name)s ')

db.define_table('Employee_Address_Details',
    Field('employee_id', 'reference Employee_Master', ondelete = 'NO ACTION', writable = False),
    Field('street','string', length = 50, requires = IS_UPPER()),
    Field('town','string', length = 50, requires = IS_UPPER()),
    Field('province','string', length = 50, requires = IS_UPPER()),
    Field('city','string', length = 50, requires = IS_UPPER()),
    Field('country','string', length = 50, requires = IS_EMPTY_OR(IS_IN_SET(COUNTRIES, zero = 'Choose Country'))),    
    Field('contact_no','string',length=50),
    Field('local_street','string', length = 50, requires = IS_UPPER()),
    Field('local_zone_no','string', length = 25, requires = IS_UPPER()),
    Field('local_property_no','string', length = 25, requires = IS_UPPER()),
    Field('local_apartment_no','string', length = 25, requires = IS_UPPER()),
    Field('landlord_name', 'string', length = 50),
    Field('local_contact_no','string',length=50),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False), format = '%(account_code)s')

db.define_table('Labor_Card_Profession',
    Field('labor_card_profession', 'string', length = 50),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False), format = '%(labor_card_profession)s')

db.define_table('Sector',
    Field('sector', 'string', length = 50),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False), format = '%(sector)s')

db.define_table('Sponsor',
    Field('sponsor', 'string', length = 50),
    Field('status_id','reference Status', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Status.id,'%(status)s', zero = 'Choose status')),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False), format = '%(sector)s')

db.define_table('Employee_Employment_Details',
    Field('employee_id', 'reference Employee_Master', ondelete = 'NO ACTION', writable = False),
    Field('employee_no', 'integer'),
    Field('account_code', 'string', length = 10),
    Field('department_code_id','reference Department', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Department.id, '%(department_code)s - %(department_name)s', zero = 'Choose Department'), represent = lambda v, r: '' if v is None else v),    
    Field('sub_department_code_id','reference Sub_Department', ondelete='NO ACTION', requires = IS_EMPTY_OR(IS_IN_DB(db, db.Sub_Department.id, '%(sub_department_name)s',zero = 'Choose Sub Department'))),
    Field('designation_code_id','reference Designation', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Designation.id, '%(designation_code)s - %(designation_name)s', zero = 'Choose Designation')),
    Field('section_code_id','reference Section', ondelete = 'NO ACTION', requires = IS_EMPTY_OR(IS_IN_DB(db, db.Section.id, '%(section_code)s - %(section_name)s', zero = 'Choose Section'))),
    Field('leave_entitlement','string',length=50),
    Field('leave_days_per_year','integer',default=0),
    Field('air_fare','string',length=50),
    Field('date_joined','date', default = request.now),   # engagement date 
    Field('last_joining_date','date'), # update from annual leave
    Field('date_last_return','date', default = request.now), # update bussiness, maternity, emergency.. date joined
    Field('date_last_ticket','date', default = request.now),
    Field('date_leave_due','date', default = request.now),
    Field('proposed_date','date', default = request.now),
    Field('labor_card_profession_id', 'reference Labor_Card_Profession', ondelete = 'NO ACTION', requires=IS_EMPTY_OR(IS_IN_DB(db,db.Labor_Card_Profession.id,'%(labor_card_profession)s',zero='Choose Profession'))), #
    Field('sector', 'string', length = 50),    
    Field('sponsors_id', 'reference Sponsor',ondelete='NO ACTION',requires=IS_EMPTY_OR(IS_IN_DB(db,db.Sponsor.id,'%(sponsor)s',zero='Choose Sponsor'))),
    Field('sponsors_occ', 'string', length = 50),       
    Field('back_office_code_id','reference Department', ondelete = 'NO ACTION', requires = IS_EMPTY_OR(IS_IN_DB(db, db.Department.id, '%(department_code)s - %(department_name)s', zero = 'Choose Department'))),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False), format = '%(account_code)s')

db.define_table('Bank_Account',
    Field('bank_account_name','string',length=50),
    Field('status_id','reference Status', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Status.id,'%(status)s', zero = 'Choose status')),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False))

db.define_table('Employee_Master_Account_Info',    
    Field('employee_id','reference Employee_Master', ondelete = 'NO ACTION', writable = False),
    Field('basic_income','decimal(10,2)', default = 0),
    Field('housing_allowances','decimal(10,2)', default = 0),
    Field('car_allowances','decimal(10,2)', default = 0),
    Field('petrol_allowances','decimal(10,2)', default = 0),
    Field('food_allowances','decimal(10,2)', default = 0),
    Field('others','decimal(10,2)', default = 0),
    Field('incentive','decimal(10,2)', default = 0), #compute=lambda r: r['unit_price'] * r['quantity']
    Field('mobile_allowances','decimal(10,2)',default=0),
    Field('total_gross_pay','decimal(10,2)', readable = True, writable = False, compute = lambda d: d['basic_income'] + d['housing_allowances'] + d['car_allowances'] + d['petrol_allowances'] + d['food_allowances'] + d['others'] + d['incentive'] + d['mobile_allowances']), # compute = lambda p: p['regular_maintenance'] + p['accident_repair'] + p['statutory_expenses'] + p['spare_parts']
    Field('bank_transfer','decimal(10,2)', default = 0),
    Field('loan_or_advances','decimal(10,2)', default = 0),
    Field('other_deductions','decimal(10,2)', default = 0),
    Field('absent_deductions','decimal(10,2)', default = 0),
    Field('total_deductions', 'decimal(10,2)', readable=True,writable = False, compute = lambda d: d['loan_or_advances'] + d['other_deductions'] + d['absent_deductions']),
    Field('net_pay', 'decimal(10,2)', default = 0, writable = False, compute = lambda d: d['total_gross_pay'] - d['total_deductions']),    
    Field('bank_account_name_id', 'reference Bank_Account',ondelete='NO ACTION', requires=IS_EMPTY_OR(IS_IN_DB(db,db.Bank_Account.id,'%(bank_account_name)s', zero='Choose Bank Account'))),
    Field('bank_account_no','string', length = 50),
    Field('bank_branch','string',length=50),    
    Field('bank_iban_no', 'string',length=50),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False))

db.define_table('Employee_Master_Account_Transaction_Temporary',
    Field('employee_id', 'reference Employee_Master', ondelete = 'NO ACTION', writable = False),
    Field('start_transaction_date','date'),
    Field('end_transaction_date','date'),
    Field('days_work', 'integer', default = 0),
    Field('basic_income', 'decimal(10,2)', default = 0),
    Field('housing_allowances','decimal(10,2)', default = 0),
    Field('car_allowances','decimal(10,2)', default = 0),
    Field('petrol_allowances','decimal(10,2)', default = 0),
    Field('food_allowances','decimal(10,2)', default = 0),
    Field('others','decimal(10,2)', default = 0),
    Field('incentive','decimal(10,2)', default = 0),
    Field('mobile_allowances','decimal(10,2)',default=0),
    Field('total_gross_pay','decimal(10,2)', compute = lambda p: p['basic_income'] + p['housing_allowances'] + p['car_allowances'] + p['petrol_allowances'] + p['food_allowances'] + p['others'] + p['incentive']), # compute = lambda p: p['regular_maintenance'] + p['accident_repair'] + p['statutory_expenses'] + p['spare_parts']    
    Field('loan_or_advances','decimal(10,2)', default = 0),
    Field('other_deductions','decimal(10,2)', default = 0),
    Field('absent_deductions','decimal(10,2)', default = 0),
    Field('total_deductions','decimal(10,2)', compute = lambda d: d['loan_or_advances'] + d['other_deductions'] + d['absent_deductions']),
    Field('bank_transfer','decimal(10,2)', default = 0, compute = lambda s: s['total_gross_pay'] - s['total_deductions']),
    Field('net_pay', 'decimal(10,2)', default = 0, compute = lambda s: s['total_gross_pay'] - s['total_deductions']),
    Field('remarks', 'string'),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False))

db.define_table('Employee_Master_Account_Transaction',
    Field('employee_id', 'reference Employee_Master', ondelete = 'NO ACTION', writable = False),
    Field('start_transaction_date','date'),
    Field('end_transaction_date','date'),
    Field('days_work', 'integer', default = 0),
    Field('basic_income', 'decimal(10,2)', default = 0),
    Field('housing_allowances','decimal(10,2)', default = 0),
    Field('car_allowances','decimal(10,2)', default = 0),
    Field('petrol_allowances','decimal(10,2)', default = 0),
    Field('food_allowances','decimal(10,2)', default = 0),
    Field('others','decimal(10,2)', default = 0),
    Field('incentive','decimal(10,2)', default = 0),
    Field('mobile_allowances','decimal(10,2)',default=0),
    Field('total_gross_pay','decimal(10,2)', writable = False, compute = lambda p: p['basic_income'] + p['housing_allowances'] + p['car_allowances'] + p['petrol_allowances'] + p['food_allowances'] + p['others'] + p['incentive']), # compute = lambda p: p['regular_maintenance'] + p['accident_repair'] + p['statutory_expenses'] + p['spare_parts']
    Field('bank_transfer','decimal(10,2)', default = 0),
    Field('loan_or_advances','decimal(10,2)', default = 0),
    Field('other_deductions','decimal(10,2)', default = 0),
    Field('absent_deductions','decimal(10,2)', default = 0),
    Field('total_deductions','decimal(10,2)', writable = False, compute = lambda d: d['loan_or_advances'] + d['other_deductions'] + d['absent_deductions']),
    Field('net_pay', 'decimal(10,2)', default = 0, writable = False),
    Field('remarks', 'text'),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False))

db.define_table('Department_Head_Assignment',
    Field('users_id', db.auth_user, ondelete = 'NO ACTION'),
    Field('employee_id','reference Employee_Master', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Employee_Master, '%(first_name)s %(middle_name)s %(last_name)s', zero = 'Choose Employee')),
    Field('back_office_code_id','reference Department', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Department.id, '%(department_code)s - %(department_name)s', zero = 'Choose Department')),
    Field('sub_department_id','reference Sub_Department', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Sub_Department.id, '%(id)s - %(sub_department_name)s', zero = 'Choose Sub Department')),
    Field('status_id','reference Status', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Status.id,'%(status)s', zero = 'Choose status')),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False))

db.define_table('Back_Office_Assignment',
    Field('users_id', db.auth_user, ondelete = 'NO ACTION'),
    Field('employee_id','reference Employee_Master', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Employee_Master, '%(first_name)s %(middle_name)s %(last_name)s', zero = 'Choose Employee')),
    Field('back_office_code_id','reference Department', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Department.id, '%(department_code)s - %(department_name)s', zero = 'Choose Department')),
    Field('status_id','reference Status', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Status.id,'%(status)s', zero = 'Choose status')),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False))

db.define_table('Employee_Managers_Assignment',
    Field('employee_id','reference Employee_Master', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Employee_Master, '%(first_name)s %(middle_name)s %(last_name)s', zero = 'Choose Employee')),
    Field('users_id', db.auth_user, ondelete = 'NO ACTION'),
    Field('managers_approval',db.auth_user, ondelete = 'NO ACTION'),
    Field('department_code_id','reference Department', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Department.id, '%(department_code)s - %(department_name)s', zero = 'Choose Department')),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False))
    
db.define_table('Employee_Master_Leave',
    Field('transaction_no','string',length=25),
    Field('doc_ref_no','string',length=25),    
    Field('employee_id','reference Employee_Master', ondelete = 'NO ACTION', requires = IS_IN_DB(db(db.Employee_Master.employee_status_id == 1),db.Employee_Master ,'%(first_name)s %(middle_name)s %(last_name)s', zero = 'Choose Employee')),        
    Field('application_date', 'date', default = request.now, writable=False), 
    Field('from_effective_date','date', default = request.now),
    Field('to_effective_date','date', default = request.now), #requires = IS_DATE(format('%m-%d-%Y'))),    
    Field('date_returned','date'),
    Field('replacement','reference Employee_Master', ondelete = 'NO ACTION', requires = IS_EMPTY_OR(IS_IN_DB(db, db.Employee_Master, '%(first_name)s %(middle_name)s %(last_name)s', zero = 'Choose Replacement'))),    
    Field('type_of_leave_id', 'reference Type_Leave', ondelete = 'NO ACTION',requires = IS_IN_DB(db, db.Type_Leave.id,'%(type_of_leave)s', zero = 'Choose Type')),
    Field('duration_leave','decimal(10,2)', default = 0),        
    Field('joining_doc_ref_no','string',length=25),
    Field('joining_application_date', 'date', default = request.now), 
    Field('return_justification','string',length=50),
    Field('remarks', 'string'),   
    Field('dept_remarks', 'string'),   
    Field('hr_remarks', 'string'),   
    Field('mngt_remarks', 'text'),   
    Field('leave_days_per_year','integer',default=0),
    Field('working_days','integer',default=0),
    Field('entitled_days','integer',default=0),
    Field('last_joining_date','date'), # get from the master table
    Field('status_id','reference Leave_Status', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Leave_Status.id,'%(status)s', zero = 'Choose status')),    
    Field('canceled','boolean',default=False),
    Field('deleted','boolean',default=False),        
    Field('manager_assigned', 'integer'),
    Field('mngt_approved_by', db.auth_user, ondelete = 'NO ACTION',writable = False, readable = False),
    Field('acct_approved_by', db.auth_user, ondelete = 'NO ACTION', writable = False, readable = False),
    Field('hr_approved_by', db.auth_user, ondelete = 'NO ACTION', writable = False, readable = False),
    Field('admn_approved_by', db.auth_user, ondelete = 'NO ACTION', writable = False, readable = False),    
    Field('dept_approved_by', db.auth_user, ondelete = 'NO ACTION', writable = False, readable = False),
    Field('medical_file','upload',requires = IS_EMPTY_OR(IS_UPLOAD_FILENAME(extension='pdf'))),
    Field('maternity_file','upload',requires = IS_EMPTY_OR(IS_UPLOAD_FILENAME(extension='pdf'))),
    Field('leave_encashment','boolean'),
    Field('salary_slip','boolean'),
    Field('rejected_status','boolean',default=False), # pending / settled
    Field('rejected_by',db.auth_user, ondelete = 'NO ACTION'),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id,writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False))

db.define_table('Leave_Salary_Slip',
    Field('employee_master_leave_id','reference Employee_Master_Leave',ondelete='NO ACTION', writable = False, readalbe = False),
    Field('employee_id','reference Employee_Master', ondelete = 'NO ACTION', writable = False, readalbe = False),
    Field('leave_salary','decimal(10,2)',default=0),
    Field('air_ticket','decimal(10,2)',default=0),
    Field('commission_or_bonus','decimal(10,2)',default=0),
    Field('salary_due','decimal(10,2)',default=0),
    Field('gratuity','decimal(10,2)',default=0),
    Field('other_payments','decimal(10,2)',default=0),    
    Field('month_salary','decimal(10,2)',default=0),
    Field('total_gross','decimal(10,2)',default=0), #compute = lambda s: s['leave_salary'] + s['air_ticket'] + s['commission_or_bonus'] + s['salary_due'] + s['other_payments']+ s['month_salary'] ),
    Field('deductions','decimal(10,2)',default=0),
    Field('net_total','decimal(10,2)',default=0), #compute = lambda s: s['total_gross'] - s['deductions']),    #, compute = lambda d: d['basic_income'] + d['housing_allowances'] + d['car_allowances'] + d['petrol_allowances'] + d['food_allowances'] + d['others'] + d['incentive'] + d['mobile_allowances']), # compute = lambda p: p['regular_maintenance'] + p['accident_repair'] + p['statutory_expenses'] + p['spare_parts']
    Field('remarks','string'),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False))

db.define_table('Current_Month_Leave_Salary_Slip',
    Field('employee_master_leave_id','reference Employee_Master_Leave',ondelete='NO ACTION', writable = False, readalbe = False),
    Field('employee_id','reference Employee_Master', ondelete = 'NO ACTION', writable = False, readalbe = False),
    Field('basic_salary','decimal(10,2)',default=0),
    Field('housing_allowances','decimal(10,2)',default=0),
    Field('car_allowances','decimal(10,2)',default=0),
    Field('food_allowances','decimal(10,2)',default=0),
    Field('petrol_allowances','decimal(10,2)',default=0),
    Field('incentive_bonus','decimal(10,2)',default=0),    
    Field('others','decimal(10,2)',default=0),
    Field('total_gross','decimal(10,2)',default=0), #compute = lambda s: s['basic_salary'] + s['housing_allowances'] + s['car_allowances']+ s['food_allowances']+ s['petrol_allowances']+ s['incentive_bonus']+ s['others']),
    Field('remarks','string'),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False))

db.define_table('Communication_Tranx_Prefix',    
    Field('prefix', length = 10, requires = [IS_UPPER(), IS_NOT_EMPTY()]), 
    Field('prefix_name','string', length = 30, requires = [IS_UPPER(), IS_NOT_EMPTY()]),    
    Field('serial_key', 'integer', default = 0),
    Field('prefix_key','string', length = 10, requires = [IS_UPPER(), IS_NOT_EMPTY()]),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False), format = '%(prefix)s')

db.define_table('Department_Users_Assignment',
    Field('users_id', db.auth_user, ondelete = 'NO ACTION'),
    Field('employee_id','reference Employee_Master', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Employee_Master, '%(first_name)s %(middle_name)s %(last_name)s', zero = 'Choose Employee')),
    Field('sub_department_id','reference Sub_Department', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Sub_Department.id, '%(sub_department_name)s', zero = 'Choose Sub Department')),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False))

db.define_table('Employee_Leave_Chart',
    Field('transaction_date','date'),    
    Field('employee_id', 'reference Employee_Master', ondelete = 'NO ACTION', writable = False),    
    Field('sub_department_id','reference Sub_Department', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Sub_Department.id, '%(sub_department_name)s', zero = 'Choose Sub Department')),
    Field('from_effective_date','date', default = request.now, requires = IS_DATE(format('%m-%d-%Y'))),
    Field('to_effective_date','date', default = request.now, requires = IS_DATE(format('%m-%d-%Y'))),        
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False))

db.define_table('Employee_Leave_Chart_Temporary',
    Field('transaction_date','date'),
    Field('employee_id', 'reference Employee_Master', ondelete = 'NO ACTION', writable = False),    
    Field('sub_department_id','reference Sub_Department', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Sub_Department.id, '%(sub_department_name)s', zero = 'Choose Sub Department')),
    Field('from_effective_date','date', default = request.now, requires = IS_DATE(format('%m-%d-%Y'))),
    Field('to_effective_date','date', default = request.now, requires = IS_DATE(format('%m-%d-%Y'))),        
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False))

db.define_table('Email_Notification',
    Field('email_notification','string',length=50),
    Field('email_password','string',length=50),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False), format = '%(account_code)s')

db.define_table('Salary_Adjustment_Status',
    Field('status','string',length=20, requires = IS_NOT_IN_DB(db, 'Salary_Adjustment_Status.status')),
    Field('action_required',length=50),
    Field('description','string', length = 50),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False))

db.define_table('Salary_Adjustment',
    Field('transaction_no','string',length=25),
    Field('transaction_date', 'date', default = request.now,writable=False),    
    Field('doc_ref_no','string',length=25),        
    Field('effectivity_date', 'date', default = request.now),
    Field('employee_id','reference Employee_Master', ondelete = 'NO ACTION', requires = IS_IN_DB(db(db.Employee_Master.employee_status_id == 1),db.Employee_Master ,'%(first_name)s %(middle_name)s %(last_name)s', zero = 'Choose Employee')),    
    Field('adjustment_type',requires = IS_IN_SET({'D':'Decrement', 'I':'Increment'}, zero=None)),
    Field('basic_income','decimal(10,2)', default = 0),
    Field('housing_allowances','decimal(10,2)', default = 0),
    Field('car_allowances','decimal(10,2)', default = 0),
    Field('petrol_allowances','decimal(10,2)', default = 0),
    Field('food_allowances','decimal(10,2)', default = 0),
    Field('others','decimal(10,2)', default = 0),
    Field('incentive','decimal(10,2)', default = 0), #compute=lambda r: r['unit_price'] * r['quantity']
    Field('mobile_allowances','decimal(10,2)',default=0),
    Field('total_gross_pay','decimal(10,2)', readable = True, writable = False, compute = lambda d: d['basic_income'] + d['housing_allowances'] + d['car_allowances'] + d['petrol_allowances'] + d['food_allowances'] + d['others'] + d['incentive'] + d['mobile_allowances']), # compute = lambda p: p['regular_maintenance'] + p['accident_repair'] + p['statutory_expenses'] + p['spare_parts']    
    Field('remarks', 'string'),       
    Field('hr_remarks', 'string'),   
    Field('mngt_remarks', 'string'), 
    Field('hr_approved_by', db.auth_user, ondelete = 'NO ACTION', writable = False, readable = False),
    Field('mngt_approved_by', db.auth_user, ondelete = 'NO ACTION',writable = False, readable = False),
    Field('status_id','reference Salary_Adjustment_Status', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Salary_Adjustment_Status.id,'%(status)s', zero = 'Choose status')),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False))

db.define_table('Incoming_Mail',
    Field('mail_prefix_no_id','reference Communication_Tranx_Prefix', ondelete = 'NO ACTION',writable = False),   
    Field('incoming_mail_no', 'string', length = 25, writable = False),
    Field('mail_date','date', default = request.now),
    Field('mail_sender','string', length = 50),
    Field('mail_subject','string', length = 50),
    Field('attached','upload',requires = IS_EMPTY_OR(IS_UPLOAD_FILENAME(extension='pdf'))),
    Field('confidential', 'boolean', default = False),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False))

db.define_table('Outgoing_Mail',    
    Field('mail_prefix_no_id','reference Communication_Tranx_Prefix', ondelete = 'NO ACTION',writable = False),   
    Field('outgoing_mail_no', 'string', length = 25, writable = False),
    Field('mail_date','date', default = request.now),
    Field('mail_sender','string', length = 50),
    Field('mail_addressee','string', length = 50),
    Field('mail_subject','string'),
    Field('postage','decimal(10,2)', default = 0),    
    Field('attached','upload',requires = IS_EMPTY_OR(IS_UPLOAD_FILENAME(extension='pdf'))),
    Field('confidential', 'boolean', default = False),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False))

db.define_table('Circular',
    Field('circular_prefix_no_id','reference Communication_Tranx_Prefix', ondelete = 'NO ACTION',writable = False),   
    Field('circular_no','string', length = 25, writable = False),
    Field('circular_date','date', default = request.now),
    Field('circular_addressee', 'string', length = 50),    
    Field('circular_subject','string', legnth = 50),
    Field('attached','upload',requires = IS_EMPTY_OR(IS_UPLOAD_FILENAME(extension='pdf'))),
    Field('confidential','boolean',default=False),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False))

db.define_table('Memorandum',
    Field('memorandum_prefix_no_id','reference Communication_Tranx_Prefix', ondelete = 'NO ACTION',writable = False),
    Field('memorandum_no','string', length = 25, writable = False),
    Field('memorandum_date','date', default = request.now),
    Field('memorandum_from', 'string', length = 50),
    Field('memorandum_to', 'string', length = 50),
    Field('memorandum_subject','string', legnth = 50),
    Field('attached','upload',requires = IS_EMPTY_OR(IS_UPLOAD_FILENAME(extension='pdf'))),
    Field('confidential','boolean',default=False),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False))

db.define_table('Fax',
    Field('fax_prefix_no_id','reference Communication_Tranx_Prefix', ondelete = 'NO ACTION',writable = False),
    Field('fax_no','string', length = 25, writable = False),
    Field('fax_date','date', default = request.now),
    Field('fax_from', 'string', length = 50),
    Field('fax_to', 'string', length = 50),
    Field('fax_subject','string', legnth = 50),
    Field('attached','upload',requires = IS_EMPTY_OR(IS_UPLOAD_FILENAME(extension='pdf'))),
    Field('confidential','boolean',default=False),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False))

db.define_table('HR_Registry',
    Field('registry_date','date', default = request.now),
    Field('employee_id','reference Employee_Master', ondelete = 'NO ACTION', requires = IS_IN_DB(db(db.Employee_Master.employee_status_id == 1),db.Employee_Master ,'%(first_name)s %(middle_name)s %(last_name)s', zero = 'Choose Employee')),    
    Field('hours','decimal(10,2)', default = 0),
    Field('noted_by', 'reference Employee_Master', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Employee_Master, '%(first_name)s %(middle_name)s %(last_name)s', zero = 'Choose Employee')),
    Field('remarks','string'),    
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False))

db.define_table('EOS_Status',
    Field('status','string',length=50),
    Field('description','string', length = 50),
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False),format = '%(status)s')

db.define_table('EOS',
    Field('employee_id','reference Employee_Master', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.Employee_Master ,'%(first_name)s %(middle_name)s %(last_name)s', zero = 'Choose Employee')),
    Field('sponsor_date_transferred','date',default=request.now),
    Field('sponsor_contact_no','string',length=25),
    Field('sponsor_cr','string',length=25),
    Field('sponsor_computer_card_no','string',length=25),
    Field('status_id','reference EOS_Status', ondelete = 'NO ACTION', requires = IS_IN_DB(db, db.EOS_Status.id,'%(status)s', zero = 'Choose status')),    
    Field('attached','upload',requires = IS_EMPTY_OR(IS_UPLOAD_FILENAME(extension='pdf'))),
    Field('remarks','string'),    
    Field('created_on', 'datetime', default=request.now, writable = False, readable = False),
    Field('created_by', db.auth_user, ondelete = 'NO ACTION', default=auth.user_id, writable = False, readable = False),
    Field('updated_on', 'datetime', update=request.now, writable = False, readable = False),
    Field('updated_by', db.auth_user, ondelete = 'NO ACTION', update=auth.user_id, writable = False, readable = False))

# db.define_table('asdf',Field('asdf'),auth.signature)

# mysched.queue_task('demo1', prevent_drift = True, repeats = 0, period = 5)